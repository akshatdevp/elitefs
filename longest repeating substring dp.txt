import java.util.Scanner;
class asdfs{
public static String longestDupSubstring(String S) {
        int mat[][] = new int[2][];
        int size = S.length();
        mat[0] = new int[size + 1];
        mat[1] = new int[size + 1];
        int max = 0;
        int lastIndex = 0;
        for(int i = 1; i <= size; i++) {
            int[] prev = mat[i & 1];
            int[] curr = mat[1 - i & 1];
            for(int j = 1; j <= size; j++) {
                curr[j] = (S.charAt(i - 1) == S.charAt(j - 1) && i != j) ? 
                    1 + prev[j - 1] : 0;
                if(curr[j] > max) {
                    max = curr[j];
                    lastIndex = j;
                }
            }
        }
        return S.substring(lastIndex - max, lastIndex);
    }
public static void main(String args[])
    {
        Scanner sa=new Scanner(System.in);
        String s=sa.next();
        System.out.println(longestDupSubstring(s).length());
    }
}